{"ast":null,"code":"var _jsxFileName = \"/Users/Keenan/Desktop/Lambda-Projects/Sprint-11/React-Testing-TV-Show/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport parse from \"html-react-parser\";\nimport { formatSeasons } from \"./utils/formatSeasons\";\nimport Episodes from \"./components/Episodes\";\nimport \"./styles.css\";\nexport default function App() {\n  const [show, setShow] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(\"\");\n  const episodes = seasons[selectedSeason] || [];\n  useEffect(() => {\n    const fetchShow = () => {\n      axios.get(\"https://api.tvmaze.com/singlesearch/shows?q=stranger-things&embed=episodes\").then(res => {\n        setShow(res.data);\n        setSeasons(formatSeasons(res.data._embedded.episodes));\n      });\n    };\n\n    fetchShow();\n  }, []);\n\n  const handleSelect = e => {\n    setSelectedSeason(e.value);\n  };\n\n  if (!show) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"Fetching data...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"poster-img\",\n    src: show.image.original,\n    alt: show.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, show.name), parse(show.summary), /*#__PURE__*/React.createElement(Dropdown, {\n    options: Object.keys(seasons),\n    onChange: handleSelect,\n    value: selectedSeason || \"Select a season\",\n    placeholder: \"Select an option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Episodes, {\n    episodes: episodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Keenan/Desktop/Lambda-Projects/Sprint-11/React-Testing-TV-Show/src/App.js"],"names":["React","useState","useEffect","axios","Dropdown","parse","formatSeasons","Episodes","App","show","setShow","seasons","setSeasons","selectedSeason","setSelectedSeason","episodes","fetchShow","get","then","res","data","_embedded","handleSelect","e","value","image","original","name","summary","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMc,QAAQ,GAAGJ,OAAO,CAACE,cAAD,CAAP,IAA2B,EAA5C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,MAAM;AACtBb,MAAAA,KAAK,CACFc,GADH,CAEI,4EAFJ,EAIGC,IAJH,CAIQC,GAAG,IAAI;AACXT,QAAAA,OAAO,CAACS,GAAG,CAACC,IAAL,CAAP;AACAR,QAAAA,UAAU,CAACN,aAAa,CAACa,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBN,QAApB,CAAd,CAAV;AACD,OAPH;AAQD,KATD;;AAUAC,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,iBAAiB,CAACS,CAAC,CAACC,KAAH,CAAjB;AACD,GAFD;;AAIA,MAAI,CAACf,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEA,IAAI,CAACgB,KAAL,CAAWC,QAA5C;AAAsD,IAAA,GAAG,EAAEjB,IAAI,CAACkB,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,IAAI,CAACkB,IAAV,CAFF,EAGGtB,KAAK,CAACI,IAAI,CAACmB,OAAN,CAHR,eAIE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYnB,OAAZ,CADX;AAEE,IAAA,QAAQ,EAAEW,YAFZ;AAGE,IAAA,KAAK,EAAET,cAAc,IAAI,iBAH3B;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport parse from \"html-react-parser\";\n\nimport { formatSeasons } from \"./utils/formatSeasons\";\n\nimport Episodes from \"./components/Episodes\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [show, setShow] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(\"\");\n  const episodes = seasons[selectedSeason] || [];\n\n  useEffect(() => {\n    const fetchShow = () => {\n      axios\n        .get(\n          \"https://api.tvmaze.com/singlesearch/shows?q=stranger-things&embed=episodes\"\n        )\n        .then(res => {\n          setShow(res.data);\n          setSeasons(formatSeasons(res.data._embedded.episodes));\n        });\n    };\n    fetchShow();\n  }, []);\n\n  const handleSelect = e => {\n    setSelectedSeason(e.value);\n  };\n\n  if (!show) {\n    return <h2>Fetching data...</h2>;\n  }\n\n  return (\n    <div className=\"App\">\n      <img className=\"poster-img\" src={show.image.original} alt={show.name} />\n      <h1>{show.name}</h1>\n      {parse(show.summary)}\n      <Dropdown\n        options={Object.keys(seasons)}\n        onChange={handleSelect}\n        value={selectedSeason || \"Select a season\"}\n        placeholder=\"Select an option\"\n      />\n      <Episodes episodes={episodes} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}